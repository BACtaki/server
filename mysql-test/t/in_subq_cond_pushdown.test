let $no_pushdown= set statement optimizer_switch='condition_pushdown_for_subquery=off' for; 

create table t1 (a int, b int, c int, d int);
create table t2 (e int, f int, g int);
create table t3 (x int, y int);

insert into t1 values
(1,1,18,1), (2,1,25,1), (1,3,40,1), (2,1,15,4),
(4,2,24,4), (3,2,23,1), (1,2,40,2), (3,4,17,2),
(5,5,65,1), (2,3,70,3),  (1,4,35,3), (2,3,25,3);

insert into t2 values
(1,2,38), (2,3,15), (1,3,40), (1,4,35),
(2,2,70), (3,4,23), (5,5,12), (5,4,17),
(3,3,17), (4,2,24), (2,5,25), (5,1,65);

insert into t3 values
(1,25), (1,18), (2,15), (4,24),
(1,35), (3,23), (3,17), (2,15);

create view v1 as
(
  select * from t3 where x<=3
);

--echo # conjunctive subformula : pushing into HAVING
let $query=
  select * from t1
  where c<25 and
    (a,c) in (select e,max(g) from t2 where e<5 group by e);

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # extracted and formula : pushing into HAVING
let $query=
  select * from t1
  where c>55 and b<4 and
    (a,b,c) in
    (
      select e,f,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # extracted or formula : pushing into HAVING
let $query=
  select * from t1
  where (c>60 or c<25) and
    (a,b,c) in
    (
      select e,f,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # extracted and-or formula : pushing into HAVING
let $query=
  select * from t1
  where ((c>60 or c<25) and b>2) and
    (a,b,c) in
    (
      select e,f,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # conjunctive subformula : pushing into HAVING
let $query=
  select * from t1
  where ((a<2 or d>2) and b>3) and
    (a,b,c) in
    (
      select e,f,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # using view in subquery definition : pushing into HAVING
let $query=
  select * from t1
  where c>20 and
    (a,c) in
    (
      select x,max(y)
      from v1
      where x>1
      group by x
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # using equality : pushing into WHERE
let $query=
  select * from t1,v1
  where c>20 and c=y and
    (a,c) in
    (
      select e,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # conjunctive subformula : pushing into WHERE
let $query=
  select * from t1
  where a<2 and
    (a,c) in
    (
      select e,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # extracted and formula : pushing into WHERE
let $query=
  select * from t1
  where a>2 and a<5 and
    (a,c) in
    (
      select e,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # extracted or formula : pushing into WHERE
let $query=
  select * from t1
  where (a<2 or a>=4) and
    (a,c) in
    (
      select e,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # extracted and-or formula : pushing into WHERE
let $query=
  select * from t1
  where ((a<2 or a=5) and b>3) and
    (a,b,c) in
    (
      select e,f,max(g)
      from t2
      where e<5
      group by e,f
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # extracted and-or formula : pushing into WHERE
let $query=
  select * from t1
  where ((a<2 or a=5) and b>3) and
    (a,b,c) in
    (
      select e,f,max(g)
      from t2
      where e<5
      group by e,f
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # conjunctive subformula : pushing into WHERE
let $query=
  select * from t1
  where ((b<3 or d>2) and a<2) and
    (a,b,c) in
    (
      select e,f,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # using equalities : pushing into WHERE
let $query=
  select * from t1
  where d=1 and a=d and
    (a,c) in
    (
      select e,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # using equality : pushing into WHERE
let $query=
  select * from t1
  where d>1 and a=d and
    (a,c) in
    (
      select e,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # using view in subquery definition : pushing into WHERE
let $query=
  select * from t1
  where a<3 and
    (a,c) in
    (
      select x,max(y)
      from v1
      where x>1
      group by x
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # using equality : pushing into WHERE
let $query=
  select * from t1,v1
  where t1.a=v1.x and v1.x<2 and v1.y>30 and
    (t1.a,t1.c) in
    (
      select e,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

--echo # conjunctive subformula : pushing into WHERE
--echo # extracted or formula : pushing into HAVING
let $query=
  select * from t1
  where ((b<3 or b=4) and a<3) and
    (a,b,c) in
    (
      select e,f,max(g)
      from t2
      where e<5
      group by e
    )
;

eval $no_pushdown $query;
eval $query;
eval explain $query;
eval explain format=json $query;

drop table t1,t2,t3;
drop view v1;
